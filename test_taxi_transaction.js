/**
 * –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–∏ –≤ ZenMoney –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è "—Ç–∞–∫—Å–∏ 100 000 –∫–∞—Ä—Ç–∞"
 */

const { createZenMoneyTransactionStructure, createTransactionInZenMoney, formatTransactionForDisplay } = require('./src/zenmoney/transaction');
const SupabaseClient = require('./src/supabase/client');
require('dotenv').config();

async function testTaxiTransaction() {
  try {
    console.log('üöï –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∏ "—Ç–∞–∫—Å–∏ 100 000 –∫–∞—Ä—Ç–∞" –≤ ZenMoney...\n');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω
    if (!process.env.ZENMONEY_TOKEN) {
      console.error('‚ùå –û—à–∏–±–∫–∞: ZENMONEY_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è');
      console.log('üí° –î–æ–±–∞–≤—å—Ç–µ ZENMONEY_TOKEN=your_token_here –≤ —Ñ–∞–π–ª .env');
      return;
    }
    
    console.log('üîë –¢–æ–∫–µ–Ω ZenMoney –Ω–∞–π–¥–µ–Ω:', process.env.ZENMONEY_TOKEN.substring(0, 10) + '...');
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Supabase –∫–ª–∏–µ–Ω—Ç
    const supabaseClient = new SupabaseClient();
    
    // –î–∞–Ω–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–Ω–∞–ª–∏–∑–∞ —Å–æ–æ–±—â–µ–Ω–∏—è "—Ç–∞–∫—Å–∏ 100 000 –∫–∞—Ä—Ç–∞"
    const transactionData = {
      tag: {
        title: '–ü—Ä–æ–¥—É–∫—Ç—ã' // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é, —Ç–∞–∫ –∫–∞–∫ –ò–ò –Ω–µ –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–ª
      },
      account: {
        name: '–ö–∞—Ä—Ç–∞', // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–æ –ø–æ –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É "–∫–∞—Ä—Ç–∞"
        type: 'card'
      },
      amount: 100000, // 100 000 —Ä—É–±–ª–µ–π
      formattedAmount: '100 000',
      comment: '—Ç–∞–∫—Å–∏ 100 000 –∫–∞—Ä—Ç–∞'
    };
    
    console.log('üìä –î–∞–Ω–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:');
    console.log(JSON.stringify(transactionData, null, 2));
    console.log();
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
    console.log('üîÑ –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –¥–ª—è ZenMoney...');
    const structureResult = await createZenMoneyTransactionStructure(transactionData, supabaseClient);
    
    if (!structureResult.success) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã:', structureResult.error);
      return;
    }
    
    console.log('‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∞:');
    console.log(JSON.stringify(structureResult.transaction, null, 2));
    console.log();
    
    // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    const displayText = formatTransactionForDisplay(transactionData);
    console.log('üìù –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:');
    console.log(displayText);
    console.log();
    
    // –°–æ–∑–¥–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –≤ ZenMoney
    console.log('üîÑ –°–æ–∑–¥–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –≤ ZenMoney...');
    const createResult = await createTransactionInZenMoney(transactionData, supabaseClient);
    
    if (createResult.success) {
      console.log('‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞ –≤ ZenMoney!');
      console.log('üìä –û—Ç–≤–µ—Ç –æ—Ç ZenMoney:', createResult.zenMoneyResponse);
      console.log();
      console.log('üéâ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç ZenMoney - —Ç–∞–º –¥–æ–ª–∂–Ω–∞ –ø–æ—è–≤–∏—Ç—å—Å—è –Ω–æ–≤–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è!');
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:', createResult.error);
    }
    
  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.message);
    console.error('üìä –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', error);
  }
}

testTaxiTransaction();

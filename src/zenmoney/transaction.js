/**
 * –ú–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è–º–∏ ZenMoney
 */

const ZenMoneyAPI = require('./api');

/**
 * –§–æ—Ä–º–∏—Ä—É–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –¥–ª—è ZenMoney API
 * @param {Object} transactionData - –î–∞–Ω–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
 * @param {Object} supabaseClient - –ö–ª–∏–µ–Ω—Ç Supabase –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è ID —Å—á–µ—Ç–æ–≤ –∏ —Ç–µ–≥–æ–≤
 * @returns {Object} - –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –¥–ª—è ZenMoney
 */
async function createZenMoneyTransactionStructure(transactionData, supabaseClient) {
  try {
    console.log('üîÑ –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –¥–ª—è ZenMoney...');
    console.log('üìä –î–∞–Ω–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:', transactionData);

    // –ü–æ–ª—É—á–∞–µ–º ID —Å—á–µ—Ç–∞ –∏–∑ Supabase
    let accountId = null;
    if (supabaseClient) {
      const accountsResult = await supabaseClient.getAllAccounts();
      if (accountsResult.success && accountsResult.data) {
        const account = accountsResult.data.find(acc => 
          acc.title.toLowerCase() === transactionData.account.name.toLowerCase()
        );
        if (account) {
          accountId = account.id;
          console.log(`üè¶ –ù–∞–π–¥–µ–Ω —Å—á–µ—Ç: ${account.title} (ID: ${accountId})`);
        } else {
          console.log(`‚ö†Ô∏è –°—á–µ—Ç "${transactionData.account.name}" –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö`);
        }
      }
    }

    // –ü–æ–ª—É—á–∞–µ–º ID —Ç–µ–≥–∞ –∏–∑ Supabase
    let tagId = null;
    if (supabaseClient) {
      const tagsResult = await supabaseClient.getAllTagsWithParents();
      if (tagsResult.success && tagsResult.data) {
        const tag = tagsResult.data.find(t => 
          t.title.toLowerCase() === transactionData.tag.title.toLowerCase()
        );
        if (tag) {
          tagId = tag.id;
          console.log(`üè∑Ô∏è –ù–∞–π–¥–µ–Ω —Ç–µ–≥: ${tag.title} (ID: ${tagId})`);
        } else {
          console.log(`‚ö†Ô∏è –¢–µ–≥ "${transactionData.tag.title}" –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö`);
        }
      }
    }

    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –¥–ª—è ZenMoney API
    const zenMoneyTransaction = {
      id: generateTransactionId(),
      date: new Date().toISOString().split('T')[0], // –¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ YYYY-MM-DD
      amount: Math.round(transactionData.amount * 100), // –°—É–º–º–∞ –≤ –∫–æ–ø–µ–π–∫–∞—Ö
      account: accountId, // ID —Å—á–µ—Ç–∞
      tag: tagId, // ID —Ç–µ–≥–∞
      comment: transactionData.comment, // –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
      created: Math.floor(Date.now() / 1000), // Unix timestamp
      changed: Math.floor(Date.now() / 1000) // Unix timestamp
    };

    console.log('‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –¥–ª—è ZenMoney —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∞:', zenMoneyTransaction);

    return {
      success: true,
      transaction: zenMoneyTransaction,
      accountId,
      tagId
    };

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:', error.message);
    return {
      success: false,
      error: error.message
    };
  }
}

/**
 * –°–æ–∑–¥–∞–µ—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –≤ ZenMoney
 * @param {Object} transactionData - –î–∞–Ω–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
 * @param {Object} supabaseClient - –ö–ª–∏–µ–Ω—Ç Supabase
 * @returns {Object} - –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ–∑–¥–∞–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
 */
async function createTransactionInZenMoney(transactionData, supabaseClient) {
  try {
    console.log('üîÑ –°–æ–∑–¥–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –≤ ZenMoney...');

    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
    const structureResult = await createZenMoneyTransactionStructure(transactionData, supabaseClient);
    if (!structureResult.success) {
      return {
        success: false,
        error: `–û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã: ${structureResult.error}`
      };
    }

    // –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä API –∫–ª–∏–µ–Ω—Ç–∞
    const zenMoneyAPI = new ZenMoneyAPI();

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –≤ ZenMoney
    const result = await zenMoneyAPI.createTransaction(structureResult.transaction);

    console.log('‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞ –≤ ZenMoney');

    return {
      success: true,
      transaction: structureResult.transaction,
      zenMoneyResponse: result
    };

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –≤ ZenMoney:', error.message);
    return {
      success: false,
      error: error.message
    };
  }
}

/**
 * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –¥–ª—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
 * @returns {string} - –£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID
 */
function generateTransactionId() {
  const timestamp = Date.now();
  const random = Math.floor(Math.random() * 1000);
  return `transaction_${timestamp}_${random}`;
}

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
 * @param {Object} transactionData - –î–∞–Ω–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
 * @returns {string} - –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞
 */
function formatTransactionForDisplay(transactionData) {
  try {
    const date = new Date().toLocaleDateString('ru-RU');
    
    return `üìã *–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∑–∞–ø–∏—Å–∏ –¥–ª—è ZenMoney:*

üìÖ **–î–∞—Ç–∞:** ${date}
üè∑Ô∏è **–ö–∞—Ç–µ–≥–æ—Ä–∏—è:** ${transactionData.tag.title}
üè¶ **–°—á–µ—Ç:** ${transactionData.account.name}
üí∞ **–°—É–º–º–∞:** ${transactionData.formattedAmount} ‚ÇΩ
üí¨ **–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:** ${transactionData.comment}

‚úÖ –ì–æ—Ç–æ–≤–æ –∫ —Å–æ–∑–¥–∞–Ω–∏—é –≤ ZenMoney!`;

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:', error.message);
    return '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏';
  }
}

module.exports = {
  createZenMoneyTransactionStructure,
  createTransactionInZenMoney,
  generateTransactionId,
  formatTransactionForDisplay
};
